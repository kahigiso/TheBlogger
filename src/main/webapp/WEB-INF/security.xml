<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
		   
	<http auto-config="true" use-expressions="true" >
		<intercept-url pattern="/**" access="isAnonymous()" />
		<intercept-url pattern="/administrate/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/manage/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/login" access="isAnonymous()"/>
		<form-login login-page="/login" default-target-url="/" />
		<logout logout-url="/logout"/>
	</http>
	
	<authentication-manager>
		<authentication-provider>
		<password-encoder hash="bcrypt"/>
			<user-service>
			  	<user name="admin" password="admin" authorities="ROLE_ADMIN, ROLE_USER" />
    			<!-- <jdbc-user-service data-source-ref="dataSource" users-by-username-query="select bu.username, bu.password from blog_user bu join user_roles ur on bu.id = ur.user_id join blog_role br on ur.role_id = br_id where bu.username=?" authorities-by-username-query="select username,password, actived from blog_user where  username=?" /> -->
			</user-service>
		</authentication-provider>
	</authentication-manager>
</beans:beans>